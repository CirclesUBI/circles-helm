apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "..fullname" . }}
  labels:
    {{- include "..labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "..selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "..selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}-migrations
          image: "{{ .Values.image.repository }}-migrations:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "..fullname" . }}
            - secretRef:
                name: {{ include "..fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8989
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            timeoutSeconds: {{ .Values.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /health
              port: http
            timeoutSeconds: {{ .Values.timeoutSeconds }}
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /health
              port: http
            timeoutSeconds: {{ .Values.timeoutSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ include "..fullname" . }}
            - secretRef:
                name: {{ include "..fullname" . }}
      {{- if .Values.ncat.enabled }}
        - name: ncat-sidecar
          image: 'asia.gcr.io/celestial-opus-371808/api-server-ncat:dev'
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: ncat
      {{- end }}
      {{- if .Values.tailscale.enabled }}
        - name: ts-sidecar
          imagePullPolicy: Always
          image: "ghcr.io/tailscale/tailscale:v1.36.2"
          env:
            - name: TS_EXTRA_ARGS
              value: "--login-server {{ .Values.tailscale.loginServer }}"
            - name: TS_AUTHKEY
              valueFrom:
                secretKeyRef:
                  name: tailscale
                  key: TS_AUTHKEY
          envFrom:
            - configMapRef:
                name: tailscale
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
      serviceAccountName: "tailscale"
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
